/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Thu Mar 16 16:23:51 2017. */

#ifndef PB_MESSAGEDEFINITIONS_PB_H_INCLUDED
#define PB_MESSAGEDEFINITIONS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FieldEndPoint {
    FieldEndPoint_UC = 1,
    FieldEndPoint_CM = 2,
    FieldEndPoint_DB = 3,
    FieldEndPoint_CL = 4
} FieldEndPoint;
#define _FieldEndPoint_MIN FieldEndPoint_UC
#define _FieldEndPoint_MAX FieldEndPoint_CL
#define _FieldEndPoint_ARRAYSIZE ((FieldEndPoint)(FieldEndPoint_CL+1))

typedef enum _COMMAND_ORIGIN {
    COMMAND_ORIGIN_UC_POWER_MANAGER = 1,
    COMMAND_ORIGIN_CM_VEHICLE_MONITOR = 2,
    COMMAND_ORIGIN_SERVER_FLEET_MANAGER = 3
} COMMAND_ORIGIN;
#define _COMMAND_ORIGIN_MIN COMMAND_ORIGIN_UC_POWER_MANAGER
#define _COMMAND_ORIGIN_MAX COMMAND_ORIGIN_SERVER_FLEET_MANAGER
#define _COMMAND_ORIGIN_ARRAYSIZE ((COMMAND_ORIGIN)(COMMAND_ORIGIN_SERVER_FLEET_MANAGER+1))

typedef enum _CommandRequest_TYPE {
    CommandRequest_TYPE_SETDOORLOCK = 1,
    CommandRequest_TYPE_COMFORT = 2,
    CommandRequest_TYPE_LIGHTS = 3,
    CommandRequest_TYPE_DRIVETRAIN = 4,
    CommandRequest_TYPE_AP102CTRL = 5,
    CommandRequest_TYPE_SETMOTORCALIBRATION = 6
} CommandRequest_TYPE;
#define _CommandRequest_TYPE_MIN CommandRequest_TYPE_SETDOORLOCK
#define _CommandRequest_TYPE_MAX CommandRequest_TYPE_SETMOTORCALIBRATION
#define _CommandRequest_TYPE_ARRAYSIZE ((CommandRequest_TYPE)(CommandRequest_TYPE_SETMOTORCALIBRATION+1))

typedef enum _CommandResponse_RESULT {
    CommandResponse_RESULT_SUCCESS = 1,
    CommandResponse_RESULT_UNAUTHORIZED = 2,
    CommandResponse_RESULT_UNSUPPORTED = 3,
    CommandResponse_RESULT_TIMEOUT = 4,
    CommandResponse_RESULT_BLOCKED = 5
} CommandResponse_RESULT;
#define _CommandResponse_RESULT_MIN CommandResponse_RESULT_SUCCESS
#define _CommandResponse_RESULT_MAX CommandResponse_RESULT_BLOCKED
#define _CommandResponse_RESULT_ARRAYSIZE ((CommandResponse_RESULT)(CommandResponse_RESULT_BLOCKED+1))

/* Struct definitions */
typedef struct _CommandRequest_Ap102Control {
    bool has_speed;
    float speed;
    bool has_direction;
    float direction;
/* @@protoc_insertion_point(struct:CommandRequest_Ap102Control) */
} CommandRequest_Ap102Control;

typedef struct _CommandRequest_SetDoorLock {
    bool has_locked;
    bool locked;
/* @@protoc_insertion_point(struct:CommandRequest_SetDoorLock) */
} CommandRequest_SetDoorLock;

typedef struct _CommandRequest_SetMotorCalibration {
    bool has_steerGain;
    float steerGain;
    bool has_speedGain;
    float speedGain;
    bool has_steerOffset;
    float steerOffset;
    bool has_speedOffset;
    float speedOffset;
/* @@protoc_insertion_point(struct:CommandRequest_SetMotorCalibration) */
} CommandRequest_SetMotorCalibration;

typedef struct _CommandResponse_SoftwareFileVersion {
    bool has_minor;
    uint32_t minor;
    bool has_major;
    uint32_t major;
/* @@protoc_insertion_point(struct:CommandResponse_SoftwareFileVersion) */
} CommandResponse_SoftwareFileVersion;

typedef struct _StatusUpdate {
    bool has_timestamp;
    int32_t timestamp;
    bool has_locLongitude;
    float locLongitude;
    bool has_locLatitude;
    float locLatitude;
    bool has_locAltitude;
    float locAltitude;
    bool has_speedGPS;
    float speedGPS;
    bool has_seatOccupiedFR;
    bool seatOccupiedFR;
    bool has_seatOccupiedFL;
    bool seatOccupiedFL;
    bool has_seatOccupiedRR;
    bool seatOccupiedRR;
    bool has_seatOccupiedRL;
    bool seatOccupiedRL;
    bool has_blinkerLeft;
    bool blinkerLeft;
    bool has_blinkerRight;
    bool blinkerRight;
    bool has_doorOpenFR;
    bool doorOpenFR;
    bool has_doorOpenFL;
    bool doorOpenFL;
    bool has_doorOpenRR;
    bool doorOpenRR;
    bool has_doorOpenRL;
    bool doorOpenRL;
    bool has_vehicleLocked;
    bool vehicleLocked;
/* @@protoc_insertion_point(struct:StatusUpdate) */
} StatusUpdate;

typedef struct _CommandRequest {
    bool has_timestamp;
    int32_t timestamp;
    bool has_commandOrigin;
    COMMAND_ORIGIN commandOrigin;
    bool has_counter;
    int32_t counter;
    bool has_type;
    CommandRequest_TYPE type;
    pb_size_t which_argument;
    union {
        CommandRequest_SetDoorLock setDoorLock;
        CommandRequest_Ap102Control ap102Control;
        CommandRequest_SetMotorCalibration setMotorCalibration;
    } argument;
/* @@protoc_insertion_point(struct:CommandRequest) */
} CommandRequest;

typedef struct _CommandResponse {
    bool has_timestamp;
    int32_t timestamp;
    bool has_commandOrigin;
    COMMAND_ORIGIN commandOrigin;
    bool has_counter;
    int32_t counter;
    bool has_result;
    CommandResponse_RESULT result;
    pb_callback_t error_message;
    pb_size_t which_retval;
    union {
        CommandResponse_SoftwareFileVersion softwareFileVersion;
    } retval;
/* @@protoc_insertion_point(struct:CommandResponse) */
} CommandResponse;

typedef struct _ContainerMessage {
    pb_size_t which_message;
    union {
        StatusUpdate status;
        CommandRequest commandRequest;
        CommandResponse commandResponse;
    } message;
/* @@protoc_insertion_point(struct:ContainerMessage) */
} ContainerMessage;

/* Extensions */
extern const pb_extension_type_t source; /* field type: FieldEndPoint source; */
extern const pb_extension_type_t sink; /* field type: FieldEndPoint sink; */
extern const pb_extension_type_t FileVersionMajor; /* field type: uint32_t FileVersionMajor; */
extern const pb_extension_type_t FileVersionMinor; /* field type: uint32_t FileVersionMinor; */

/* Default values for struct fields */

/* Initializer values for message structs */
#define ContainerMessage_init_default            {0, {StatusUpdate_init_default}}
#define StatusUpdate_init_default                {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define CommandRequest_init_default              {false, 0, false, (COMMAND_ORIGIN)0, false, 0, false, (CommandRequest_TYPE)0, 0, {CommandRequest_SetDoorLock_init_default}}
#define CommandRequest_SetDoorLock_init_default  {false, 0}
#define CommandRequest_Ap102Control_init_default {false, 0, false, 0}
#define CommandRequest_SetMotorCalibration_init_default {false, 0, false, 0, false, 0, false, 0}
#define CommandResponse_init_default             {false, 0, false, (COMMAND_ORIGIN)0, false, 0, false, (CommandResponse_RESULT)0, {{NULL}, NULL}, 0, {CommandResponse_SoftwareFileVersion_init_default}}
#define CommandResponse_SoftwareFileVersion_init_default {false, 0, false, 0}
#define ContainerMessage_init_zero               {0, {StatusUpdate_init_zero}}
#define StatusUpdate_init_zero                   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define CommandRequest_init_zero                 {false, 0, false, (COMMAND_ORIGIN)0, false, 0, false, (CommandRequest_TYPE)0, 0, {CommandRequest_SetDoorLock_init_zero}}
#define CommandRequest_SetDoorLock_init_zero     {false, 0}
#define CommandRequest_Ap102Control_init_zero    {false, 0, false, 0}
#define CommandRequest_SetMotorCalibration_init_zero {false, 0, false, 0, false, 0, false, 0}
#define CommandResponse_init_zero                {false, 0, false, (COMMAND_ORIGIN)0, false, 0, false, (CommandResponse_RESULT)0, {{NULL}, NULL}, 0, {CommandResponse_SoftwareFileVersion_init_zero}}
#define CommandResponse_SoftwareFileVersion_init_zero {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CommandRequest_Ap102Control_speed_tag    1
#define CommandRequest_Ap102Control_direction_tag 2
#define CommandRequest_SetDoorLock_locked_tag    1
#define CommandRequest_SetMotorCalibration_steerGain_tag 1
#define CommandRequest_SetMotorCalibration_steerOffset_tag 3
#define CommandRequest_SetMotorCalibration_speedGain_tag 2
#define CommandRequest_SetMotorCalibration_speedOffset_tag 4
#define CommandResponse_SoftwareFileVersion_minor_tag 1
#define CommandResponse_SoftwareFileVersion_major_tag 2
#define StatusUpdate_timestamp_tag               1
#define StatusUpdate_locLongitude_tag            4
#define StatusUpdate_locLatitude_tag             5
#define StatusUpdate_locAltitude_tag             6
#define StatusUpdate_speedGPS_tag                7
#define StatusUpdate_seatOccupiedFR_tag          35
#define StatusUpdate_seatOccupiedFL_tag          36
#define StatusUpdate_seatOccupiedRR_tag          37
#define StatusUpdate_seatOccupiedRL_tag          38
#define StatusUpdate_blinkerLeft_tag             200
#define StatusUpdate_blinkerRight_tag            201
#define StatusUpdate_doorOpenFR_tag              202
#define StatusUpdate_doorOpenFL_tag              203
#define StatusUpdate_doorOpenRR_tag              204
#define StatusUpdate_doorOpenRL_tag              205
#define StatusUpdate_vehicleLocked_tag           206
#define CommandRequest_setDoorLock_tag           5
#define CommandRequest_ap102Control_tag          6
#define CommandRequest_setMotorCalibration_tag   7
#define CommandRequest_timestamp_tag             1
#define CommandRequest_commandOrigin_tag         2
#define CommandRequest_counter_tag               3
#define CommandRequest_type_tag                  4
#define CommandResponse_softwareFileVersion_tag  6
#define CommandResponse_timestamp_tag            1
#define CommandResponse_commandOrigin_tag        2
#define CommandResponse_counter_tag              3
#define CommandResponse_result_tag               4
#define CommandResponse_error_message_tag        5
#define ContainerMessage_status_tag              1
#define ContainerMessage_commandRequest_tag      2
#define ContainerMessage_commandResponse_tag     3
#define source_tag                               50000
#define sink_tag                                 50001
#define FileVersionMajor_tag                     50010
#define FileVersionMinor_tag                     50011

/* Struct field encoding specification for nanopb */
extern const pb_field_t ContainerMessage_fields[4];
extern const pb_field_t StatusUpdate_fields[17];
extern const pb_field_t CommandRequest_fields[8];
extern const pb_field_t CommandRequest_SetDoorLock_fields[2];
extern const pb_field_t CommandRequest_Ap102Control_fields[3];
extern const pb_field_t CommandRequest_SetMotorCalibration_fields[5];
extern const pb_field_t CommandResponse_fields[7];
extern const pb_field_t CommandResponse_SoftwareFileVersion_fields[3];

/* Maximum encoded size of messages (where known) */
/* ContainerMessage_size depends on runtime parameters */
#define StatusUpdate_size                        64
#define CommandRequest_size                      48
#define CommandRequest_SetDoorLock_size          2
#define CommandRequest_Ap102Control_size         10
#define CommandRequest_SetMotorCalibration_size  20
/* CommandResponse_size depends on runtime parameters */
#define CommandResponse_SoftwareFileVersion_size 12

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGEDEFINITIONS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
