/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Mon Aug 22 13:54:52 2016. */

#ifndef PB_CCU_INTERNAL_PB_H_INCLUDED
#define PB_CCU_INTERNAL_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _CUcmd_SetWindowPosition_WINDOW {
    CUcmd_SetWindowPosition_WINDOW_FRONT_RIGHT = 1,
    CUcmd_SetWindowPosition_WINDOW_FRONT_LEFT = 2,
    CUcmd_SetWindowPosition_WINDOW_REAR_RIGHT = 3,
    CUcmd_SetWindowPosition_WINDOW_REAR_LEFT = 4
} CUcmd_SetWindowPosition_WINDOW;
#define _CUcmd_SetWindowPosition_WINDOW_MIN CUcmd_SetWindowPosition_WINDOW_FRONT_RIGHT
#define _CUcmd_SetWindowPosition_WINDOW_MAX CUcmd_SetWindowPosition_WINDOW_REAR_LEFT
#define _CUcmd_SetWindowPosition_WINDOW_ARRAYSIZE ((CUcmd_SetWindowPosition_WINDOW)(CUcmd_SetWindowPosition_WINDOW_REAR_LEFT+1))

typedef enum _CUcmd_SetLightState_LIGHT {
    CUcmd_SetLightState_LIGHT_FRONT_LONG = 1,
    CUcmd_SetLightState_LIGHT_FRONT_SHORT = 2,
    CUcmd_SetLightState_LIGHT_LEFT_BLINKER = 3,
    CUcmd_SetLightState_LIGHT_RIGHT_BLINKER = 4,
    CUcmd_SetLightState_LIGHT_FRONT_FOG = 5,
    CUcmd_SetLightState_LIGHT_BACK_FOG = 6,
    CUcmd_SetLightState_LIGHT_BREAK_LIG = 7,
    CUcmd_SetLightState_LIGHT_DRL = 8
} CUcmd_SetLightState_LIGHT;
#define _CUcmd_SetLightState_LIGHT_MIN CUcmd_SetLightState_LIGHT_FRONT_LONG
#define _CUcmd_SetLightState_LIGHT_MAX CUcmd_SetLightState_LIGHT_DRL
#define _CUcmd_SetLightState_LIGHT_ARRAYSIZE ((CUcmd_SetLightState_LIGHT)(CUcmd_SetLightState_LIGHT_DRL+1))

typedef enum _CUcmd_SetPRNDstate_PRND {
    CUcmd_SetPRNDstate_PRND_PARK = 1,
    CUcmd_SetPRNDstate_PRND_REVERSE = 2,
    CUcmd_SetPRNDstate_PRND_NEUTRAL = 3,
    CUcmd_SetPRNDstate_PRND_DRIVE = 4
} CUcmd_SetPRNDstate_PRND;
#define _CUcmd_SetPRNDstate_PRND_MIN CUcmd_SetPRNDstate_PRND_PARK
#define _CUcmd_SetPRNDstate_PRND_MAX CUcmd_SetPRNDstate_PRND_DRIVE
#define _CUcmd_SetPRNDstate_PRND_ARRAYSIZE ((CUcmd_SetPRNDstate_PRND)(CUcmd_SetPRNDstate_PRND_DRIVE+1))

typedef enum _SpiriStatus_activeError_SPIRIERRORS {
    SpiriStatus_activeError_SPIRIERRORS_ERR_NO_ERROR = 1,
    SpiriStatus_activeError_SPIRIERRORS_ERR_HV_CELL_UNDER_VOLTAGE = 2,
    SpiriStatus_activeError_SPIRIERRORS_ERR_HV_CELL_OVER_VOLTAGE = 3,
    SpiriStatus_activeError_SPIRIERRORS_ERR_other_errors = 4
} SpiriStatus_activeError_SPIRIERRORS;
#define _SpiriStatus_activeError_SPIRIERRORS_MIN SpiriStatus_activeError_SPIRIERRORS_ERR_NO_ERROR
#define _SpiriStatus_activeError_SPIRIERRORS_MAX SpiriStatus_activeError_SPIRIERRORS_ERR_other_errors
#define _SpiriStatus_activeError_SPIRIERRORS_ARRAYSIZE ((SpiriStatus_activeError_SPIRIERRORS)(SpiriStatus_activeError_SPIRIERRORS_ERR_other_errors+1))

typedef enum _Event_EVENT {
    Event_EVENT_UNIVERSAL_EVENT = 1,
    Event_EVENT_CHARGING_STARTED = 2,
    Event_EVENT_CHARGING_STOPED = 3
} Event_EVENT;
#define _Event_EVENT_MIN Event_EVENT_UNIVERSAL_EVENT
#define _Event_EVENT_MAX Event_EVENT_CHARGING_STOPED
#define _Event_EVENT_ARRAYSIZE ((Event_EVENT)(Event_EVENT_CHARGING_STOPED+1))

/* Struct definitions */
typedef struct _CUcmd_NoCommand {
    char dummy_field;
/* @@protoc_insertion_point(struct:CUcmd_NoCommand) */
} CUcmd_NoCommand;

typedef struct _CUcmd {
    bool has_timestamp;
    int32_t timestamp;
/* @@protoc_insertion_point(struct:CUcmd) */
} CUcmd;

typedef struct _CUcmd_SetChargingProperties {
    bool has_charging_upper_limit_perc;
    int32_t charging_upper_limit_perc;
/* @@protoc_insertion_point(struct:CUcmd_SetChargingProperties) */
} CUcmd_SetChargingProperties;

typedef struct _CUcmd_SetChargingState {
    bool state;
/* @@protoc_insertion_point(struct:CUcmd_SetChargingState) */
} CUcmd_SetChargingState;

typedef struct _CUcmd_SetHornState {
    bool state;
/* @@protoc_insertion_point(struct:CUcmd_SetHornState) */
} CUcmd_SetHornState;

typedef struct _CUcmd_SetInverterProperties {
    bool has_maximal_torque;
    int32_t maximal_torque;
/* @@protoc_insertion_point(struct:CUcmd_SetInverterProperties) */
} CUcmd_SetInverterProperties;

typedef struct _CUcmd_SetLightState {
    CUcmd_SetLightState_LIGHT light;
    bool has_state;
    bool state;
/* @@protoc_insertion_point(struct:CUcmd_SetLightState) */
} CUcmd_SetLightState;

typedef struct _CUcmd_SetMoodLightState {
    bool has_intensity;
    int32_t intensity;
    bool has_colorR;
    int32_t colorR;
    bool has_colorG;
    int32_t colorG;
    bool has_colorB;
    int32_t colorB;
/* @@protoc_insertion_point(struct:CUcmd_SetMoodLightState) */
} CUcmd_SetMoodLightState;

typedef struct _CUcmd_SetPRNDstate {
    CUcmd_SetPRNDstate_PRND state;
/* @@protoc_insertion_point(struct:CUcmd_SetPRNDstate) */
} CUcmd_SetPRNDstate;

typedef struct _CUcmd_SetSeatHeaterState {
    int32_t state;
/* @@protoc_insertion_point(struct:CUcmd_SetSeatHeaterState) */
} CUcmd_SetSeatHeaterState;

typedef struct _CUcmd_SetWindowPosition {
    CUcmd_SetWindowPosition_WINDOW window;
    bool has_position_perc;
    int32_t position_perc;
/* @@protoc_insertion_point(struct:CUcmd_SetWindowPosition) */
} CUcmd_SetWindowPosition;

typedef struct _CUcmd_SetWindowWasherState {
    bool state;
/* @@protoc_insertion_point(struct:CUcmd_SetWindowWasherState) */
} CUcmd_SetWindowWasherState;

typedef struct _Event {
    uint32_t timestamp;
    bool has_level;
    uint32_t level;
    bool has_aditional_info;
    uint32_t aditional_info;
    Event_EVENT event;
/* @@protoc_insertion_point(struct:Event) */
} Event;

typedef struct _SpiriStatus {
    bool has_voltageLV;
    float voltageLV;
    bool has_voltageHV;
    float voltageHV;
    bool has_locLongitude;
    float locLongitude;
    bool has_locLatitude;
    float locLatitude;
    bool has_locAltitude;
    float locAltitude;
    bool has_speedGPS;
    float speedGPS;
    bool has_speedInverter;
    float speedInverter;
    bool has_speedWheelSensor;
    float speedWheelSensor;
    bool has_speedDisplayed;
    float speedDisplayed;
    bool has_minInverterCurr;
    float minInverterCurr;
    bool has_maxInverterCurr;
    float maxInverterCurr;
    bool has_avgInverterCurr;
    float avgInverterCurr;
    bool has_tempInverter;
    float tempInverter;
    bool has_tempMotor;
    float tempMotor;
    bool has_minChargerCurrent;
    float minChargerCurrent;
    bool has_maxChargerCurrent;
    float maxChargerCurrent;
    bool has_avgChargerCurrent;
    float avgChargerCurrent;
    bool has_tempCharger;
    float tempCharger;
    bool has_tempDCDC;
    float tempDCDC;
    bool has_fanDCDCState;
    bool fanDCDCState;
    bool has_frontLong;
    bool frontLong;
    bool has_frontShort;
    bool frontShort;
    bool has_DRL;
    bool DRL;
    bool has_frontFog;
    bool frontFog;
    bool has_backFog;
    bool backFog;
    bool has_breakLight;
    bool breakLight;
    bool has_hazardButton;
    bool hazardButton;
    bool has_panicButton;
    bool panicButton;
    bool has_seatHeaterFR;
    bool seatHeaterFR;
    bool has_seatHeaterFL;
    bool seatHeaterFL;
    bool has_seatHeaterRR;
    bool seatHeaterRR;
    bool has_seatHeaterRL;
    bool seatHeaterRL;
    bool has_seatSensorFR;
    bool seatSensorFR;
    bool has_seatSensorFL;
    bool seatSensorFL;
    bool has_seatSensorRR;
    bool seatSensorRR;
    bool has_seatSensorRL;
    bool seatSensorRL;
    bool has_blinkerLeft;
    bool blinkerLeft;
    bool has_blinkerRight;
    bool blinkerRight;
    bool has_doorOpenFR;
    bool doorOpenFR;
    bool has_doorOpenFL;
    bool doorOpenFL;
    bool has_doorOpenRR;
    bool doorOpenRR;
    bool has_doorOpenRL;
    bool doorOpenRL;
    bool has_doorLockedFR;
    bool doorLockedFR;
    bool has_doorLockedFL;
    bool doorLockedFL;
    bool has_doorLockedRR;
    bool doorLockedRR;
    bool has_doorLockedRL;
    bool doorLockedRL;
    pb_callback_t error;
    int32_t timestamp;
/* @@protoc_insertion_point(struct:SpiriStatus) */
} SpiriStatus;

typedef struct _SpiriStatus_activeError {
    bool has_activeError;
    SpiriStatus_activeError_SPIRIERRORS activeError;
/* @@protoc_insertion_point(struct:SpiriStatus_activeError) */
} SpiriStatus_activeError;

/* Default values for struct fields */
extern const CUcmd_SetWindowPosition_WINDOW CUcmd_SetWindowPosition_window_default;
extern const CUcmd_SetLightState_LIGHT CUcmd_SetLightState_light_default;
extern const CUcmd_SetPRNDstate_PRND CUcmd_SetPRNDstate_state_default;
extern const SpiriStatus_activeError_SPIRIERRORS SpiriStatus_activeError_activeError_default;

/* Initializer values for message structs */
#define CUcmd_init_default                       {false, 0}
#define CUcmd_NoCommand_init_default             {0}
#define CUcmd_SetWindowPosition_init_default     {CUcmd_SetWindowPosition_WINDOW_FRONT_RIGHT, false, 0}
#define CUcmd_SetWindowWasherState_init_default  {0}
#define CUcmd_SetSeatHeaterState_init_default    {0}
#define CUcmd_SetLightState_init_default         {CUcmd_SetLightState_LIGHT_DRL, false, 0}
#define CUcmd_SetPRNDstate_init_default          {CUcmd_SetPRNDstate_PRND_NEUTRAL}
#define CUcmd_SetChargingState_init_default      {0}
#define CUcmd_SetChargingProperties_init_default {false, 0}
#define CUcmd_SetInverterProperties_init_default {false, 0}
#define CUcmd_SetHornState_init_default          {0}
#define CUcmd_SetMoodLightState_init_default     {false, 0, false, 0, false, 0, false, 0}
#define SpiriStatus_init_default                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, 0}
#define SpiriStatus_activeError_init_default     {false, SpiriStatus_activeError_SPIRIERRORS_ERR_NO_ERROR}
#define Event_init_default                       {0, false, 0, false, 0, (Event_EVENT)0}
#define CUcmd_init_zero                          {false, 0}
#define CUcmd_NoCommand_init_zero                {0}
#define CUcmd_SetWindowPosition_init_zero        {(CUcmd_SetWindowPosition_WINDOW)0, false, 0}
#define CUcmd_SetWindowWasherState_init_zero     {0}
#define CUcmd_SetSeatHeaterState_init_zero       {0}
#define CUcmd_SetLightState_init_zero            {(CUcmd_SetLightState_LIGHT)0, false, 0}
#define CUcmd_SetPRNDstate_init_zero             {(CUcmd_SetPRNDstate_PRND)0}
#define CUcmd_SetChargingState_init_zero         {0}
#define CUcmd_SetChargingProperties_init_zero    {false, 0}
#define CUcmd_SetInverterProperties_init_zero    {false, 0}
#define CUcmd_SetHornState_init_zero             {0}
#define CUcmd_SetMoodLightState_init_zero        {false, 0, false, 0, false, 0, false, 0}
#define SpiriStatus_init_zero                    {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, 0}
#define SpiriStatus_activeError_init_zero        {false, (SpiriStatus_activeError_SPIRIERRORS)0}
#define Event_init_zero                          {0, false, 0, false, 0, (Event_EVENT)0}

/* Field tags (for use in manual encoding/decoding) */
#define CUcmd_timestamp_tag                      1
#define CUcmd_SetChargingProperties_charging_upper_limit_perc_tag 1
#define CUcmd_SetChargingState_state_tag         1
#define CUcmd_SetHornState_state_tag             1
#define CUcmd_SetInverterProperties_maximal_torque_tag 1
#define CUcmd_SetLightState_light_tag            1
#define CUcmd_SetLightState_state_tag            2
#define CUcmd_SetMoodLightState_intensity_tag    1
#define CUcmd_SetMoodLightState_colorR_tag       2
#define CUcmd_SetMoodLightState_colorG_tag       3
#define CUcmd_SetMoodLightState_colorB_tag       4
#define CUcmd_SetPRNDstate_state_tag             1
#define CUcmd_SetSeatHeaterState_state_tag       1
#define CUcmd_SetWindowPosition_window_tag       1
#define CUcmd_SetWindowPosition_position_perc_tag 2
#define CUcmd_SetWindowWasherState_state_tag     1
#define Event_timestamp_tag                      1
#define Event_level_tag                          2
#define Event_aditional_info_tag                 3
#define Event_event_tag                          4
#define SpiriStatus_timestamp_tag                100
#define SpiriStatus_voltageLV_tag                1
#define SpiriStatus_voltageHV_tag                2
#define SpiriStatus_locLongitude_tag             3
#define SpiriStatus_locLatitude_tag              4
#define SpiriStatus_locAltitude_tag              5
#define SpiriStatus_speedGPS_tag                 6
#define SpiriStatus_speedInverter_tag            7
#define SpiriStatus_speedWheelSensor_tag         8
#define SpiriStatus_speedDisplayed_tag           9
#define SpiriStatus_minInverterCurr_tag          10
#define SpiriStatus_maxInverterCurr_tag          11
#define SpiriStatus_avgInverterCurr_tag          12
#define SpiriStatus_tempInverter_tag             13
#define SpiriStatus_tempMotor_tag                14
#define SpiriStatus_minChargerCurrent_tag        15
#define SpiriStatus_maxChargerCurrent_tag        16
#define SpiriStatus_avgChargerCurrent_tag        17
#define SpiriStatus_tempCharger_tag              18
#define SpiriStatus_tempDCDC_tag                 19
#define SpiriStatus_fanDCDCState_tag             20
#define SpiriStatus_frontLong_tag                21
#define SpiriStatus_frontShort_tag               22
#define SpiriStatus_DRL_tag                      23
#define SpiriStatus_frontFog_tag                 24
#define SpiriStatus_backFog_tag                  25
#define SpiriStatus_breakLight_tag               26
#define SpiriStatus_hazardButton_tag             28
#define SpiriStatus_panicButton_tag              29
#define SpiriStatus_seatHeaterFR_tag             30
#define SpiriStatus_seatHeaterFL_tag             31
#define SpiriStatus_seatHeaterRR_tag             32
#define SpiriStatus_seatHeaterRL_tag             33
#define SpiriStatus_seatSensorFR_tag             34
#define SpiriStatus_seatSensorFL_tag             35
#define SpiriStatus_seatSensorRR_tag             36
#define SpiriStatus_seatSensorRL_tag             37
#define SpiriStatus_blinkerLeft_tag              38
#define SpiriStatus_blinkerRight_tag             39
#define SpiriStatus_doorOpenFR_tag               40
#define SpiriStatus_doorOpenFL_tag               41
#define SpiriStatus_doorOpenRR_tag               42
#define SpiriStatus_doorOpenRL_tag               43
#define SpiriStatus_doorLockedFR_tag             44
#define SpiriStatus_doorLockedFL_tag             45
#define SpiriStatus_doorLockedRR_tag             46
#define SpiriStatus_doorLockedRL_tag             47
#define SpiriStatus_error_tag                    48
#define SpiriStatus_activeError_activeError_tag  1

/* Struct field encoding specification for nanopb */
extern const pb_field_t CUcmd_fields[2];
extern const pb_field_t CUcmd_NoCommand_fields[1];
extern const pb_field_t CUcmd_SetWindowPosition_fields[3];
extern const pb_field_t CUcmd_SetWindowWasherState_fields[2];
extern const pb_field_t CUcmd_SetSeatHeaterState_fields[2];
extern const pb_field_t CUcmd_SetLightState_fields[3];
extern const pb_field_t CUcmd_SetPRNDstate_fields[2];
extern const pb_field_t CUcmd_SetChargingState_fields[2];
extern const pb_field_t CUcmd_SetChargingProperties_fields[2];
extern const pb_field_t CUcmd_SetInverterProperties_fields[2];
extern const pb_field_t CUcmd_SetHornState_fields[2];
extern const pb_field_t CUcmd_SetMoodLightState_fields[5];
extern const pb_field_t SpiriStatus_fields[49];
extern const pb_field_t SpiriStatus_activeError_fields[2];
extern const pb_field_t Event_fields[5];

/* Maximum encoded size of messages (where known) */
#define CUcmd_size                               11
#define CUcmd_NoCommand_size                     0
#define CUcmd_SetWindowPosition_size             13
#define CUcmd_SetWindowWasherState_size          2
#define CUcmd_SetSeatHeaterState_size            11
#define CUcmd_SetLightState_size                 4
#define CUcmd_SetPRNDstate_size                  2
#define CUcmd_SetChargingState_size              2
#define CUcmd_SetChargingProperties_size         11
#define CUcmd_SetInverterProperties_size         11
#define CUcmd_SetHornState_size                  2
#define CUcmd_SetMoodLightState_size             44
/* SpiriStatus_size depends on runtime parameters */
#define SpiriStatus_activeError_size             2
#define Event_size                               20

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CCU_INTERNAL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
